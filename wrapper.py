from openai import OpenAI

client = OpenAI(api_key="YOUR_API_KEY")

def get_advice(numbers):
    primer = "Your role is to provide advice on someone who is underrepresented in a disadvantaged community with respect to extreme weather and climate justice. You will be given seven numbers between 0 and 100, representing statewide percentiles for certain statistics. Below, you will find each statistic and what it corresponds to. For each statistic, you will assess its severity and print out a corresponding paragraph for what a disadvantaged person in that environment can do to help their situation. Solutions should be accessible, and not rely heavily on buying expensive machines. For example, if the air quality is poor, you should refrain from telling someone to buy an air purifier. In the end, you should have seven paragraphs, one for each number sent to you. Format each paragraph like this: Metric: Text, where metric is the statistic being measured and the text is the advice. Format your result like this: include no asterisks to represent headings. We cannot render asterisks. In addition, do must separate each paragraph with \"|\". Do not include any spaces between the \"|\" character. Here is an example formatting: Paragraph1|Paragraph2|Paragraph3|Paragraph4|Paragraph5|Paragraph6|Paragraph7. You need to print only the final string, formatted in the aformentioned way. Do not print any introduction or pretext. This string should be the only thing printed."
    prompt = f"{numbers[0]}: Percentile Low Life Expectancy\n{numbers[1]}: Percentile Expected Building Loss Rate In Next 30 Years\n{numbers[2]}: Percentile Share Of Properties At Risk Of Flood In 30 Years\n{numbers[3]}: Percentile Share Of Properties At Risk Of Fire In 30 Years\n{numbers[4]}: Percentile Traffic Proximity And Volume\n{numbers[5]}: Percentile Bad Air Quality\n{numbers[6]}: Percentile Bad Water Quality"
    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": f"{primer}\n{prompt}"}]
    )
    return response.choices[0].message.content.strip()


def find_volunteering(county_name, numbers):
    primer = "Your role is to provide three environmental volunteering opportunties pertinent to anyone living near or in a disadvantaged community which is vulnerable to extreme weather and climate injustice. You will be given seven numbers between 0 and 100, representing statewide percentiles for certain statistics. Below, you will find each statistic and what it corresponds to. You will use each of these numbers, to find environmental volunteering opportunities in a certain county in California. This county will be given below as well with the seven numbers. You will then use the county name and information provided in the seven percentiles to find three volunteering opportunities pertinent to the statistics. This is very important: You will format these environmental volunteering opportunities in a very specific way. Also, ensure that the websites and volunteering events are real and not made up. Do not provide any websites and volunteering services which do not exist in real life. You will give the coordinates of the event, the address of the event, the name of the event, a website of the event, and a description of the event. The coordinates and the address, name, and description will be passed in pairs. Here is how you format one entry, exact and down to the space: longitude|latitude|website|title+address+description. This is very important: The first item NEEDS to be longitude and the second item NEEDS to be latitude. DO NOT switch the two. Longitude first, latitude second. Here is an example of such formatting: \"50|100|www.website.com|Volunteering Event: 50 Flower Street: In this volunteering event we are helping the environment.\" Of course do not include the double quotes around the result. You then want to append each of these results together with a separator of \"%\". For example, assuming EventX was an event, the final, resulting string should be Event1-Event2-Event3. Return this final string, with the sepearators for each event and the separators between the coordinates and text. Only return this string. Do not return any introduction or pretext. This string should be the only thing returned."
    prompt = f"{county_name}: County Name\n{numbers[0]}: Percentile Low Life Expectancy\n{numbers[1]}: Percentile Expected Building Loss Rate In Next 30 Years\n{numbers[2]}: Percentile Share Of Properties At Risk Of Flood In 30 Years\n{numbers[3]}: Percentile Share Of Properties At Risk Of Fire In 30 Years\n{numbers[4]}: Percentile Traffic Proximity And Volume\n{numbers[5]}: Percentile Bad Air Quality\n{numbers[6]}: Percentile Bad Water Quality"
    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": f"{primer}\n{prompt}"}]
    )
    return response.choices[0].message.content.strip()